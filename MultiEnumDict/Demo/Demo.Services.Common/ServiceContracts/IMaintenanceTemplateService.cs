//---------------------------------------------------------------------------------------------
// This file was AUTO-GENERATED by "Service Contracts" Xomega.Net generator.
//
// Manual CHANGES to this file WILL BE LOST when the code is regenerated.
//---------------------------------------------------------------------------------------------

using Demo.Services.Common.Enumerations;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Xomega.Framework.Services;

namespace Demo.Services.Common
{
    #region IMaintenanceTemplateService interface

    public interface IMaintenanceTemplateService
    {

        ///<summary>
        /// Reads the values of a Maintenance Template object by its key.
        ///</summary>
        Task<Output<MaintenanceTemplate_ReadOutput>> ReadAsync(int _id, CancellationToken token = default);

        ///<summary>
        /// Creates a new Maintenance Template object using the specified data.
        ///</summary>
        Task<Output<MaintenanceTemplate_CreateOutput>> CreateAsync(MaintenanceTemplate_CreateInput _data, CancellationToken token = default);

        ///<summary>
        /// Updates existing Maintenance Template object using the specified data.
        ///</summary>
        Task<Output> UpdateAsync(int _id, MaintenanceTemplate_UpdateInput_Data _data, CancellationToken token = default);

        ///<summary>
        /// Deletes the specified Maintenance Template object.
        ///</summary>
        Task<Output> DeleteAsync(int _id, CancellationToken token = default);

        ///<summary>
        /// Reads a list of Maintenance Template objects based on the specified criteria.
        ///</summary>
        Task<Output<ICollection<MaintenanceTemplate_ReadListOutput>>> ReadListAsync(MaintenanceTemplate_ReadListInput_Criteria _criteria, CancellationToken token = default);

    }
    #endregion

    #region MaintenanceTemplate_ReadOutput structure

    ///<summary>
    /// The output structure of operation IMaintenanceTemplateService.ReadAsync.
    ///</summary>
    public class MaintenanceTemplate_ReadOutput
    {
        
        public string Stub { get; set; }
        
        public string Description { get; set; }
        
        public int ScheduleType { get; set; }
        
        public int WorkOrderType { get; set; }
        
        public int? Duration { get; set; }
        
        public bool? Active { get; set; }
    }
    #endregion

    #region MaintenanceTemplate_CreateInput structure

    ///<summary>
    /// The input structure of operation IMaintenanceTemplateService.CreateAsync.
    ///</summary>
    public class MaintenanceTemplate_CreateInput
    {
        
        [XMaxLength(30)]
        public string Stub { get; set; }
        
        [XMaxLength(255)]
        public string Description { get; set; }
        
        [XRequired]
        public int ScheduleType { get; set; }
        
        [XRequired]
        public int WorkOrderType { get; set; }
        
        public int? Duration { get; set; }
        
        public bool? Active { get; set; }
    }
    #endregion

    #region MaintenanceTemplate_CreateOutput structure

    ///<summary>
    /// The output structure of operation IMaintenanceTemplateService.CreateAsync.
    ///</summary>
    public class MaintenanceTemplate_CreateOutput
    {
        
        public int Id { get; set; }
    }
    #endregion

    #region MaintenanceTemplate_UpdateInput_Data structure

    ///<summary>
    /// Structure of parameter Data of the input structure of operation IMaintenanceTemplateService.UpdateAsync.
    ///</summary>
    public class MaintenanceTemplate_UpdateInput_Data
    {
        
        [XMaxLength(30)]
        public string Stub { get; set; }
        
        [XMaxLength(255)]
        public string Description { get; set; }
        
        [XRequired]
        public int ScheduleType { get; set; }
        
        [XRequired]
        public int WorkOrderType { get; set; }
        
        public int? Duration { get; set; }
        
        public bool? Active { get; set; }
    }
    #endregion

    #region MaintenanceTemplate_ReadListInput_Criteria structure

    ///<summary>
    /// Structure of parameter Criteria of the input structure of operation IMaintenanceTemplateService.ReadListAsync.
    ///</summary>
    public class MaintenanceTemplate_ReadListInput_Criteria
    {
        
        ///<summary>
        /// Comparison operator for the corresponding Stub criteria.
        ///</summary>
        [XMaxLength(25)]
        [XLookupValue(Operators.EnumName)]
        public string StubOperator { get; set; }
        
        [XMaxLength(30)]
        public string Stub { get; set; }
        
        ///<summary>
        /// Comparison operator for the corresponding Description criteria.
        ///</summary>
        [XMaxLength(25)]
        [XLookupValue(Operators.EnumName)]
        public string DescriptionOperator { get; set; }
        
        [XMaxLength(255)]
        public string Description { get; set; }
        
        ///<summary>
        /// Comparison operator for the corresponding Schedule Type criteria.
        ///</summary>
        [XMaxLength(25)]
        [XLookupValue(Operators.EnumName)]
        public string ScheduleTypeOperator { get; set; }
        
        public int? ScheduleType { get; set; }
        
        ///<summary>
        /// Comparison operator for the corresponding Work Order Type criteria.
        ///</summary>
        [XMaxLength(25)]
        [XLookupValue(Operators.EnumName)]
        public string WorkOrderTypeOperator { get; set; }
        
        public int? WorkOrderType { get; set; }
        
        ///<summary>
        /// Comparison operator for the corresponding Duration criteria.
        ///</summary>
        [XMaxLength(25)]
        [XLookupValue(Operators.EnumName)]
        public string DurationOperator { get; set; }
        
        public int? Duration { get; set; }
        
        ///<summary>
        /// End of range for the corresponding Duration criteria for the BETWEEN operator.
        ///</summary>
        public int? Duration2 { get; set; }
        
        ///<summary>
        /// Comparison operator for the corresponding Active criteria.
        ///</summary>
        [XMaxLength(25)]
        [XLookupValue(Operators.EnumName)]
        public string ActiveOperator { get; set; }
        
        public bool? Active { get; set; }
    }
    #endregion

    #region MaintenanceTemplate_ReadListOutput structure

    ///<summary>
    /// The output structure of operation IMaintenanceTemplateService.ReadListAsync.
    ///</summary>
    public class MaintenanceTemplate_ReadListOutput
    {
        
        public int Id { get; set; }
        
        public string Stub { get; set; }
        
        public string Description { get; set; }
        
        public int ScheduleType { get; set; }
        
        public int WorkOrderType { get; set; }
        
        public int? Duration { get; set; }
        
        public bool? Active { get; set; }
    }
    #endregion

}