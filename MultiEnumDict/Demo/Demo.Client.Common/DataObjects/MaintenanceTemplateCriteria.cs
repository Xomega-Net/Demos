//---------------------------------------------------------------------------------------------
// This file was AUTO-GENERATED by "Xomega Data Objects" Xomega.Net generator.
//
// Manual CHANGES to this file WILL BE LOST when the code is regenerated.
//---------------------------------------------------------------------------------------------

using Demo.Client.Common.DataProperties;
using System;
using Xomega.Framework;
using Xomega.Framework.Lookup;
using Xomega.Framework.Properties;

namespace Demo.Client.Common.DataObjects
{
    public partial class MaintenanceTemplateCriteria : CriteriaObject
    {
        #region Constants

        public const string Active = "Active";
        public const string ActiveOperator = "ActiveOperator";
        public const string Description = "Description";
        public const string DescriptionOperator = "DescriptionOperator";
        public const string Duration = "Duration";
        public const string Duration2 = "Duration2";
        public const string DurationOperator = "DurationOperator";
        public const string ScheduleType = "ScheduleType";
        public const string ScheduleTypeOperator = "ScheduleTypeOperator";
        public const string Stub = "Stub";
        public const string StubOperator = "StubOperator";
        public const string WorkOrderType = "WorkOrderType";
        public const string WorkOrderTypeOperator = "WorkOrderTypeOperator";

        #endregion

        #region Properties

        public EnumBoolProperty ActiveProperty { get; private set; }
        public OperatorProperty ActiveOperatorProperty { get; private set; }
        public TextProperty DescriptionProperty { get; private set; }
        public OperatorProperty DescriptionOperatorProperty { get; private set; }
        public IntegerProperty DurationProperty { get; private set; }
        public IntegerProperty Duration2Property { get; private set; }
        public OperatorProperty DurationOperatorProperty { get; private set; }
        public ScheduleTypeProperty ScheduleTypeProperty { get; private set; }
        public OperatorProperty ScheduleTypeOperatorProperty { get; private set; }
        public TextProperty StubProperty { get; private set; }
        public OperatorProperty StubOperatorProperty { get; private set; }
        public WorkOrderTypeProperty WorkOrderTypeProperty { get; private set; }
        public OperatorProperty WorkOrderTypeOperatorProperty { get; private set; }

        #endregion

        #region Construction

        public MaintenanceTemplateCriteria()
        {
        }

        public MaintenanceTemplateCriteria(IServiceProvider serviceProvider) : base(serviceProvider)
        {
        }

        protected override void Initialize()
        {
            StubOperatorProperty = new OperatorProperty(this, StubOperator)
            {
                Size = 25,
                EnumType = "operators",
                HasNullCheck = true,
            };
            StubProperty = new TextProperty(this, Stub)
            {
                Size = 30,
            };
            DescriptionOperatorProperty = new OperatorProperty(this, DescriptionOperator)
            {
                Size = 25,
                EnumType = "operators",
                HasNullCheck = true,
            };
            DescriptionProperty = new TextProperty(this, Description)
            {
                Size = 255,
            };
            ScheduleTypeOperatorProperty = new OperatorProperty(this, ScheduleTypeOperator)
            {
                Size = 25,
                EnumType = "operators",
            };
            ScheduleTypeProperty = new ScheduleTypeProperty(this, ScheduleType)
            {
            };
            WorkOrderTypeOperatorProperty = new OperatorProperty(this, WorkOrderTypeOperator)
            {
                Size = 25,
                EnumType = "operators",
            };
            WorkOrderTypeProperty = new WorkOrderTypeProperty(this, WorkOrderType)
            {
            };
            DurationOperatorProperty = new OperatorProperty(this, DurationOperator)
            {
                Size = 25,
                EnumType = "operators",
                HasNullCheck = true,
            };
            DurationProperty = new IntegerProperty(this, Duration)
            {
            };
            Duration2Property = new IntegerProperty(this, Duration2)
            {
            };
            ActiveOperatorProperty = new OperatorProperty(this, ActiveOperator)
            {
                Size = 25,
                EnumType = "operators",
                HasNullCheck = true,
            };
            ActiveProperty = new EnumBoolProperty(this, Active)
            {
                EnumType = "yesno",
                LookupValidation = LookupValidationType.None,
            };
        }

        #endregion
    }
}